# -*- coding: utf-8 -*-
"""TL.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11M_77Ctt8SeAs2rjz7dWbmXoEIQOtRwS
"""

# app.py

# Load your trained model
model = tf.keras.models.load_model('your_model.h5')

# Define class labels
class_labels = ["Normal", "Pneumonia", "Covid-19", "Tuberculosis"]

def process_image(image):
    # Preprocess the image (resize, normalize, etc.)
    # Convert the image to numpy array
    image = np.array(image)
    # Process the image according to your model's requirements

    # Make prediction
    prediction = model.predict(np.expand_dims(image, axis=0))[0]
    # Get the predicted class label
    predicted_class = class_labels[np.argmax(prediction)]
    return predicted_class

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/upload', methods=['POST'])
def upload():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'})

    file = request.files['file']

    if file.filename == '':
        return jsonify({'error': 'No selected file'})

    if file:
        # Load and process the uploaded image
        image = Image.open(file)
        predicted_class = process_image(image)
        return jsonify({'result': predicted_class})
    else:
        return jsonify({'error': 'Error processing file'})

if __name__ == '__main__':
    app.run(debug=True)
